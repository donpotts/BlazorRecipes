@using System.Security.Claims
@inject AppService AppService
@inject AuthenticationStateProvider AuthenticationStateProvider

<MudAppBar>
    @if (!CheckedVariable)
    {
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
    }
    <MudText Class="d-flex mr-8">Blazor Recipes</MudText>
    <MudHidden Breakpoint="Breakpoint.SmAndUp" Invert="true">
        <MudTooltip Text="@tooltipText">    
            <MudSwitch T="bool" Class="d-flex justify-content-start " Value="CheckedVariable" ValueChanged="@(e => OnSwitchValueChanged((bool)e))" Color="Color.Secondary" UnCheckedColor="Color.Primary" />
        </MudTooltip>
    </MudHidden>
    <MudSpacer />
    <MudHidden Breakpoint="Breakpoint.SmAndUp" Invert="true" IsHiddenChanged="ScreenSizeChanged">
    @if (CheckedVariable)
    {
        <MudToolBar>
            <MudLink Href="/" Class="d-flex px-4" Color="Color.Inherit">Home</MudLink>
            <AuthorizeView>
                <MudLink Href="/cardrecipes" Class="d-flex px-4" Color="Color.Inherit">Card Recipes</MudLink>
            </AuthorizeView>
            <AuthorizeView Roles="Administrator">
                <MudMenu StartIcon="@Icons.Material.Filled.Settings" EndIcon="@Icons.Material.Filled.KeyboardArrowDown" Label="Admin">
                    <MudLink Href="/recipes" Class="d-flex px-4" Color="Color.Inherit">Recipes</MudLink>
                    <MudLink Href="/tags" Class="d-flex px-4" Color="Color.Inherit">Tags</MudLink>
                    <MudLink Href="/ingredients" Class="d-flex px-4" Color="Color.Inherit">Ingredients</MudLink>
                    <MudLink Href="/units" Class="d-flex px-4" Color="Color.Inherit">Units</MudLink>
                    <MudLink Href="/recipeingredients" Class="d-flex px-4" Color="Color.Inherit">Recipe Ingredients</MudLink>
                    <MudLink Href="/reviews" Class="d-flex px-4" Color="Color.Inherit">Reviews</MudLink>
                    <MudLink Href="/user" Class="d-flex px-4" Color="Color.Inherit">Users</MudLink>
                </MudMenu>
            </AuthorizeView>
            <AuthorizeView>
                <Authorized>
                        <MudLink Href="/logout" Class="d-flex px-4" Color="Color.Inherit">Logout (@context.User.Identity!.Name | @(context.User.IsInRole("Administrator") ? "Admin" : "User"))</MudLink>
                </Authorized>
                <NotAuthorized>
                        <MudLink Href="/register" Class="d-flex px-4" Color="Color.Inherit">Register</MudLink>
                        <MudLink Href="/login" Class="d-flex px-4" Color="Color.Inherit">Login</MudLink>
                </NotAuthorized>
            </AuthorizeView>
        </MudToolBar>
    }
    </MudHidden>
    <MudLink Href="https://www.radendpoint.com/" Color="Color.Inherit">About</MudLink>
</MudAppBar>
@if (!CheckedVariable)
{
    <MudDrawer @bind-Open="drawerOpen" ClipMode="DrawerClipMode.Docked">
        <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
        <AuthorizeView>
            <MudNavLink Href="/cardrecipes" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Restaurant">Card Recipes</MudNavLink>
        </AuthorizeView>
        <AuthorizeView Roles="Administrator">
            <MudNavGroup Title="Admin" Expanded="false" Icon="@Icons.Material.Filled.Settings">
                <MudNavLink Href="/recipes" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.RestaurantMenu">Recipes</MudNavLink>
                <MudNavLink Href="/tags" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Tag">Tags</MudNavLink>
                <MudNavLink Href="/ingredients" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.List">Ingredients</MudNavLink>
                <MudNavLink Href="/units" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.AdUnits">Units</MudNavLink>
                <MudNavLink Href="/recipeingredients" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.ViewList">Recipe Ingredients</MudNavLink>
                <MudNavLink Href="/reviews" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Reviews">Reviews</MudNavLink>
                <MudNavLink Href="/user" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.People">User</MudNavLink>
            </MudNavGroup>
        </AuthorizeView>
        <AuthorizeView>
            <Authorized>
                <MudNavLink Href="/logout" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Logout">Logout (@context.User.Identity!.Name | @(context.User.IsInRole("Administrator") ? "Admin" : "User"))</MudNavLink>
            </Authorized>
            <NotAuthorized>
                <MudNavLink Href="/register" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Edit">Register</MudNavLink>
                <MudNavLink Href="/login" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Login">Login</MudNavLink>
            </NotAuthorized>
        </AuthorizeView>
    </MudDrawer>
}

@code {
    private bool drawerOpen = true;
    private bool isSwitchChecked;
    private bool CheckedVariable;
    private string tooltipText => isSwitchChecked ? "Top Menu ON" : "Top Menu is OFF";

    private void DrawerToggle()
    {
        drawerOpen = !drawerOpen;
    }

    public void ScreenSizeChanged(bool hidden)
    {
        if (hidden)
            CheckedVariable = false;
        else
            CheckedVariable = isSwitchChecked;
    }

    public void OnSwitchValueChanged(bool checkedValue)
    {
        CheckedVariable = checkedValue;
        if (checkedValue)
            isSwitchChecked = true;
        else
            isSwitchChecked = false;
    }
}
